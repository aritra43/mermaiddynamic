{
    "1": "graph LR\n    A[User] --> B(Calculator Application);\n    B --> C{Operating System};\n    C --> D[Hardware];\n    style A fill:#f9f,stroke:#333,stroke-width:2px\n    style B fill:#ccf,stroke:#333,stroke-width:2px\n    style C fill:#ccf,stroke:#333,stroke-width:2px\n    style D fill:#ccf,stroke:#333,stroke-width:2px",
    "2": "erDiagram\n    Calculator *-- Calculation : performs\n    User --|> Calculator : uses\n\n    Calculator {\n        int calculatorID\n        string model\n    }\n\n    Calculation {\n        int calculationID\n        double operand1\n        string operator\n        double operand2\n        double result\n        timestamp timestamp\n    }\n\n    User {\n        int userID\n        string username\n    }",
    "3": "graph TD\n    A[User] --> B(Calculator);\n    B --> C{Input/Output};\n    C --> D[Display];\n    C --> E[Keyboard];\n    style A fill:#f9f,stroke:#333,stroke-width:2px\n    style B fill:#ccf,stroke:#333,stroke-width:2px\n    style C fill:#ccf,stroke:#333,stroke-width:2px\n    style D fill:#ccf,stroke:#333,stroke-width:2px\n    style E fill:#ccf,stroke:#333,stroke-width:2px\n    subgraph \"\"\n        B -.-> F[Arithmetic Logic Unit];\n        B -.-> G[Memory (optional)];\n    end",
    "4": "classDiagram\n    class Calculator {\n        -displayValue : String\n        -operator : String\n        -operand1 : double\n        -operand2 : double\n        +getDisplayValue() : String\n        +setDisplyValue(value:String) : void\n        +getOperator() : String\n        +setOperator(op:String) : void\n        +getOperand1() : double\n        +setOperand1(op1:double) : void\n        +getOperand2() : double\n        +setOperand2(op2:double) : void\n        +performOperation() : double\n    }\n\n    class Input {\n        +getValue() : String\n    }\n\n    class Output {\n        +display(value: String) : void\n    }\n\n    Calculator \"1\" -- \"1\" Input : uses\n    Calculator \"1\" -- \"1\" Output : uses",
    "5": "componentDiagram\n    component Calculator {\n        module Input\n        module Processor\n        module Output\n    }\n\n    component User\n    User -- Calculator",
    "6": "stateDiagram-v2\n    [*] --> Idle\n    Idle --> InputtingOperand1 : User inputs operand 1\n    InputtingOperand1 --> InputtingOperator : User inputs operator\n    InputtingOperator --> InputtingOperand2 : User inputs operand 2\n    InputtingOperand2 --> Calculating : User presses '='\n    Calculating --> DisplayingResult : Result calculated\n    DisplayingResult --> Idle : Result displayed\n    DisplayingResult --> Error : Error occurs (division by zero, etc.)\n    Error --> Idle : Error handled",
    "7": "graph LR\n    A[Start] --> B{Input Operand 1};\n    B --> C{Input Operator};\n    C --> D{Input Operand 2};\n    D --> E{Perform Calculation};\n    E --> F{Display Result};\n    F --> G[End];\n    subgraph \"Error Handling\"\n        E -- Error --> H{Handle Error};\n        H --> G;\n    end\n    style A fill:#f9f,stroke:#333,stroke-width:2px\n    style B fill:#ccf,stroke:#333,stroke-width:2px\n    style C fill:#ccf,stroke:#333,stroke-width:2px\n    style D fill:#ccf,stroke:#333,stroke-width:2px\n    style E fill:#ccf,stroke:#333,stroke-width:2px\n    style F fill:#ccf,stroke:#333,stroke-width:2px\n    style G fill:#ccf,stroke:#333,stroke-width:2px\n    style H fill:#ccf,stroke:#333,stroke-width:2px"
}